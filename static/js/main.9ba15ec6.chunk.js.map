{"version":3,"sources":["components/Pagination/Pagination.tsx","components/Pagination/Items/Items.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","pages","Array","fill","map","number","i","className","classNames","disabled","href","onClick","page","active","Items","currentList","item","items","from","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","lastIndex","firstIndex","slice","lastOnPage","length","id","onChange","event","target","value","selected","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yNASaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAQC,MAAMJ,GAAeK,KAAK,GAAGC,KAAI,SAACC,EAAQC,GAAT,OAAeD,EAASC,KAEvE,OACE,mCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBb,IAFd,SAKE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAAS,kBAAMd,EAAaD,EAAc,IAL5C,oBAUDK,EAAMG,KAAI,SAACQ,GACV,OACE,oBACEL,UAAWC,IACT,YACA,CAAEK,OAAQD,IAAShB,IAHvB,SAOE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBAAOC,IAAShB,GAAgBC,EAAae,IAJxD,SAMGA,KAREA,MAaX,oBAAIL,UAAWC,IACb,YACA,CAAEC,SAAUb,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAAS,kBAAMd,EAAaD,EAAc,IAL5C,0BCzDGkB,EAAyB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACvC,OACE,6BACGA,EAAYX,KAAI,SAAAY,GACf,OAAO,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SCFvC,IAAMC,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBnB,KAAI,SAAAiB,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO9B,EAAP,KAAgB+B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO7B,EAAP,KAAoB+B,EAApB,KACMC,EAAYjC,EAAUC,EACtBiC,EAAaD,EAAYjC,EACzBoB,EAAc,YAAIE,GAAOa,MAAMD,EAAYD,GAC3CG,EAAcH,EAAYX,EAAMe,OAAUf,EAAMe,OAASJ,EAW/D,OACE,sBAAKrB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiCiC,EAAa,EAD9C,cACqDE,EADrD,eACsEd,EAAMe,OAD5E,OAIA,sBAAKzB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,SAAU,SAACC,GAAD,OAnBMlC,GAmBuBkC,EAAMC,OAAOC,MAlB5DX,EAAWzB,QACX0B,EAAe,GAFQ,IAAC1B,GAelB,UAME,wBAAQoC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAIC,UAAQ,EAA1B,eACA,wBAAQD,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAOuB,EAAMe,OACbrC,QAASA,EACTC,YAAaA,EACbC,aAzCe,SAACe,GACpBe,EAAef,MA0Cb,cAAC,EAAD,CAAOG,YAAaA,QEzD1ByB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9ba15ec6.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pages = Array(numberOfPages).fill(1).map((number, i) => number + i);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={() => onPageChange(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n        {pages.map((page: number) => {\n          return (\n            <li\n              className={classNames(\n                'page-item',\n                { active: page === currentPage },\n              )}\n              key={page}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                onClick={() => (page !== currentPage) && onPageChange(page)}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })}\n        <li className={classNames(\n          'page-item',\n          { disabled: currentPage === numberOfPages },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={() => onPageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","type Props = {\n  currentList: string[],\n};\n\nexport const Items: React.FC<Props> = ({ currentList }) => {\n  return (\n    <ul>\n      {currentList.map(item => {\n        return <li data-cy=\"item\" key={item}>{item}</li>;\n      })}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { Items } from './components/Pagination/Items';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const lastIndex = perPage * currentPage;\n  const firstIndex = lastIndex - perPage;\n  const currentList = [...items].slice(firstIndex, lastIndex);\n  const lastOnPage = (lastIndex > items.length) ? items.length : lastIndex;\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const setNumberOfPages = (pages: number) => {\n    setPerPage(pages);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstIndex + 1} - ${lastOnPage} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => setNumberOfPages(+event.target.value)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\" selected>5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <Items currentList={currentList} />\n\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}